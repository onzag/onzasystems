version: '3.3'
services: 
    cluster-manager:
        image: app:latest
        restart: always
        volumes: 
            - ./config:/home/node/app/config
            - ./logs:/home/node/app/logs
            - ./uploads:/home/node/app/uploads
        depends_on:
            - redis
        environment:
            - INSTANCE_GROUP_ID=${INSTANCE_GROUP_ID}
            - INSTANCE_MODE=CLUSTER_MANAGER
            - NODE_ENV=%{NODE_ENV}
            - LOG_LEVEL=error
            - USING_DOCKER=true
    global-manager:
        image: app:latest
        restart: always
        volumes: 
            - ./config:/home/node/app/config
            - ./logs:/home/node/app/logs
            - ./uploads:/home/node/app/uploads
        depends_on:
            - redis
            - pgsql
        environment:
            - INSTANCE_MODE=GLOBAL_MANAGER
            - NODE_ENV=%{NODE_ENV}
            - LOG_LEVEL=error
            - USING_DOCKER=true
            - NO_SEO=false
            - PING_GOOGLE=false
    servers:
        image: app:latest
        restart: always
        depends_on:
            - redis
            - pgsql
            - global-manager
            - cluster-manager
        ports:
            - "8000"
        volumes:
            - ./config:/home/node/app/config
            - ./logs:/home/node/app/logs
            - ./uploads:/home/node/app/uploads
        environment: 
            - INSTANCE_GROUP_ID=${INSTANCE_GROUP_ID}
            - INSTANCE_MODE=EXTENDED
            - NODE_ENV=%{NODE_ENV}
            - PORT=8000
            - LOG_LEVEL=error
            - USING_DOCKER=true
            - NO_SSR=false
    redis:
        image: redis:latest
        restart: always
        ports:
            - "%{REDIS_PORT}:6379"
    nginx:
        image: nginx:latest
        restart: always
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - servers
        volumes:
            - ./key.pem:/etc/key.pem:ro
            - ./cert.pem:/etc/cert.pem:ro
            - ./nginx.processed.conf:/etc/nginx/nginx.conf:ro
            - ./nginx-logs:/var/log/nginx
    pgsql:
        image: pgsqlpostgis:latest
        restart: always
        ports:
            - "%{DB_PORT}:5432"
        volumes: 
            - ./pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=%{DB_USER}
            - POSTGRES_PASSWORD=%{DB_PASSWORD}
            - POSTGRES_DB=%{DB_NAME}